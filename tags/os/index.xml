<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Os on xymeow&#39;s blog</title>
    <link>http://xymeow.github.io/tags/os/</link>
    <description>Recent content in Os on xymeow&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 09 Oct 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://xymeow.github.io/tags/os/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Scheduler Activations: Effective Kernel Support for the User-Level Management of Parallelism - my notes</title>
      <link>http://xymeow.github.io/post/scheduler-activation-note/</link>
      <pubDate>Tue, 09 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>http://xymeow.github.io/post/scheduler-activation-note/</guid>
      <description>&lt;p&gt;Some notes taking from reading the paper &amp;lsquo;Scheduler Activations: Effective Kernel Support for the User-Level Management of Parallelism&amp;rsquo;.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Xen and the art of virtualization - my notes</title>
      <link>http://xymeow.github.io/post/xen-note/</link>
      <pubDate>Wed, 19 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>http://xymeow.github.io/post/xen-note/</guid>
      <description>&lt;p&gt;Some notes taking from reading the paper &amp;lsquo;Xen and the art of virtualization&amp;rsquo;.&lt;/p&gt;

&lt;p&gt;Xen is an x86 virtual machine monitor allowing multiple commodity OSs to share conventional hardware in a safe and resource managed fashion.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>The Singularity System - my notes</title>
      <link>http://xymeow.github.io/post/singularity/</link>
      <pubDate>Sun, 16 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>http://xymeow.github.io/post/singularity/</guid>
      <description>&lt;p&gt;Some notes taking from reading the paper &amp;lsquo;The Singularity System&amp;rsquo;.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>CSCI 555 (MIT 6.828) Lab 1 记录</title>
      <link>http://xymeow.github.io/post/cs555-lab1/</link>
      <pubDate>Mon, 03 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>http://xymeow.github.io/post/cs555-lab1/</guid>
      <description>&lt;p&gt;这学期选了cs555 Advanced Operating System, 据说这课load比较大, 但对于头铁又放飞gpa的我来说根本就无所畏惧(笑). 教授是个大佬,每节课带着读一篇system方向的经典paper,讲的挺好. 然后实验是搬运的mit 6.828, 网上资源很多,感觉工作量会比较大,这学期秃头预定😂&lt;/p&gt;

&lt;p&gt;这系列我觉得我是不会弃坑的(真香警告)&amp;hellip;
这里就记录一下码代码的大致心得以及我觉得重点的地方吧,抄答案还是另寻别处吧,以下正文&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ustc操作系统lab3</title>
      <link>http://xymeow.github.io/post/oslab3/</link>
      <pubDate>Tue, 28 Apr 2015 19:19:51 +0000</pubDate>
      
      <guid>http://xymeow.github.io/post/oslab3/</guid>
      <description>&lt;p&gt;恩恩，本周的实验看起来不难，下面是实验要求：&lt;/p&gt;

&lt;p&gt;实验内容：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;制作启动硬盘并启动一个操作系统映像&lt;/li&gt;
&lt;li&gt;下载 grub-0.97.tar.gz 并编译，或者直接下载 grub-0.97-i386-pc.tar.gz（这是已经编译好的）&lt;/li&gt;
&lt;li&gt;制作grub启动软盘，进而制作启动硬盘&lt;/li&gt;
&lt;li&gt;操作系统映像：可以到网络上下载一个可用的OS映像，然后编写menu.lst或grub.cfg，利用grub启动之

&lt;ol&gt;
&lt;li&gt;例如dlxlinux，或其他&lt;/li&gt;
&lt;li&gt;这里提供2个RTEMS操作系统的映像:hello.exe ticker.exe&lt;/li&gt;
&lt;li&gt;也可以自己编译一个Linux内核、制作一个根文件系统，并启动之&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;是不是看起来好简单啊。。不过做着做着发现还是挺神烦的&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>